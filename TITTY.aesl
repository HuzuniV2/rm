<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="1" name="test"/>
<event size="1" name="obsr"/>


<!--list of constants-->


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="1" name="thymio-II"># FLAGS
var SPEEDL = 300  # left wheel speed for each cell/second
var SPEEDR = 305 # right wheel speed for each cell/second
var TURNSPEED = 233 # correct speed to turn 90 degrees
#----------------------------------------------------------
# VARS
var dleft     # Distance traveled by the left wheel
var dright    # Distance traveled by the right wheel
var dcenter   # Distance traveled by the center of the robot
var currentX = 0 var currentY = 0 var currentDir = 360
var targetX  = 5  var targetY = 5  var targetDir = 180
var walk = 0     # flag for going straight(hehexd), 0 dead 1 do
var turnLeft = 0 # flag for turning left, 0 dead 1 do
var turnRight = 0 # flag for turning right, 0 dead 1 do
var obst = 0 # obstaculo Â´a direita
var push = 0 # if its pushing the object
var wait = 0


timer.period[0] = 0 # executa acoes e actualiza os valores
timer.period[1] = 0 # faz cehck das vars
	



onevent motor
  call math.muldiv(dleft, motor.left.speed, 30*100, 100*10*10)
  call math.muldiv(dright, motor.right.speed, 30*100, 100*10*10)
  dcenter = (dleft+dright)/2
  
  #emit test dcenter

onevent timer0
	if prox.ground.delta[0] > 800 and wait &lt; 3 then
		callsub wait
		wait += 1
	elseif prox.ground.delta[0] > 800 and wait > 3 then
		callsub go
	else 
		if walk == 1 then
			motor.right.target = SPEEDR
			motor.left.target  = SPEEDL
			walk = 0	
		elseif  walk == 0 and motor.right.target == SPEEDR and motor.left.target  == SPEEDL then
			motor.right.target = 0
			motor.left.target  = 0
			if  currentDir == 90 then
				currentY += 1 
				
			elseif currentDir == 180 then
				currentX -= 1
			elseif currentDir == 270 then
				currentY -= 1	
			else
				currentX += 1
			end
						
		elseif turnLeft == 1 then
			motor.left.target  =  -TURNSPEED
			motor.right.target = TURNSPEED
			turnLeft = 2
		
		elseif turnLeft == 2 and motor.right.target != 0 and motor.left.target  != 0 then
			motor.right.target = 0
			motor.left.target  = 0
			turnLeft = 0
			currentDir += 90
			if  currentDir > 360 then
				currentDir = 90
			end
		
		elseif turnRight == 1 then
			motor.left.target  = TURNSPEED
			motor.right.target = -TURNSPEED
			turnRight = 2
			
		elseif turnRight == 2 and motor.right.target != 0 and motor.left.target  != 0 then
			motor.right.target = 0
			motor.left.target  = 0
			turnRight = 0
			currentDir -= 90
			if  currentDir &lt;= 0 then
				currentDir = 360
			end
		end
	end
	
onevent timer1
	if (prox.horizontal[0] > 1400 or prox.horizontal[1] > 1400 or prox.horizontal[2] > 1400 or
	   prox.horizontal[3] > 1400 or prox.horizontal[4] > 1400) and (obst == 0 or obst > 3) and wait == 0 then
			obst = 1
			emit obsr 0
		# SE TIVER UM OBJECTO QUE APARECA NO DA FRENTE E PELO MENOS UM DOS LATERAIS		
	elseif obst == 1 then
			turnRight = 1
			obst = 2
			emit obsr 1
	elseif obst == 2 then
			walk = 1
			obst = 3
			emit obsr 2
	elseif obst == 3 then
			turnLeft = 1
			obst = 4
			emit obsr 3
	elseif obst == 4 then
			walk = 1
			obst = 5
			emit obsr 4
	elseif obst == 5 then
			walk = 1
			obst = 0
			emit obsr 5
	elseif currentX &lt; targetX then
		if currentDir == 180 then     # apontar para a direcao certa e mandar andar
			turnRight = 1
		elseif currentDir == 90 then
			turnRight = 1
		elseif  currentDir == 360 then
			walk = 1
		else
			turnLeft = 1
		end
	elseif currentX > targetX then
		if currentDir == 180 then     # apontar para a direcao certa e mandar andar
			walk = 1
		elseif currentDir == 90 then
			turnLeft = 1
		elseif  currentDir == 360 then
			turnRight = 1
		else
			turnRight = 1
		end
	elseif currentY &lt; targetY then
		if currentDir == 180 then     # apontar para a direcao certa e mandar andar
			turnRight = 1
		elseif currentDir == 90 then
			walk = 1
		elseif  currentDir == 360 then
			turnLeft = 1
		else
			turnRight = 1
		end
	elseif currentY > targetY then
		if currentDir == 180 then     # apontar para a direcao certa e mandar andar
			turnLeft = 1
		elseif currentDir == 90 then
			turnRight = 1
		elseif  currentDir == 360 then
			turnRight = 1
		else
			walk = 1
		end
	elseif currentX == targetX and currentY == targetY then
		if currentDir > targetDir and abs(currentDir - targetDir) &lt; 180 then
			turnRight = 1
		else if currentDir &lt; targetDir or currentDir > targetDir then
			turnLeft = 1
		end
	end	
	
end
	
	
	
onevent buttons
	when button.forward == 1 do
		call leds.top(0, 32, 0)
		timer.period[0] = 1000 # executa acoes e actualiza os valores
		timer.period[1] = 2000 # faz cehck das vars
	end
	
	
	when button.backward == 1 do
		call leds.top(32, 0, 0)
		timer.period[0] = 0
		timer.period[1] = 0
		currentX = 0
		currentY = 0
		currentDir = 360
		obst = 0
	end


sub goal
	motor.left.target = 0
	motor.right.target = 0
	timer.period[0] = 0 
	timer.period[1] = 0

sub wait
	motor.left.target = 0
	motor.right.target = 0 
	
sub go
	motor.left.target = SPEEDL
	motor.right.target = SPEEDR


</node>


</network>
